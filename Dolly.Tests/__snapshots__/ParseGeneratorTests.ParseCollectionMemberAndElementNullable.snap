using global::System.Linq;
namespace Dolly;
partial class SimpleClass : global::Dolly.IClonable<SimpleClass>
{
    object global::System.ICloneable.Clone() => this.DeepClone();
    public virtual global::Dolly.SimpleClass DeepClone() =>
        new ()
        {
            First = First,
            Second = Second
        };

    public virtual global::Dolly.SimpleClass ShallowClone() =>
        new ()
        {
            First = First,
            Second = Second
        };
}

using global::System.Linq;
namespace Dolly;
partial struct SimpleStruct : global::Dolly.IClonable<SimpleStruct>
{
    object global::System.ICloneable.Clone() => this.DeepClone();
    public global::Dolly.SimpleStruct DeepClone() =>
        new ()
        {
            First = First,
            Second = Second
        };

    public global::Dolly.SimpleStruct ShallowClone() =>
        new ()
        {
            First = First,
            Second = Second
        };
}

using global::System.Linq;
namespace Dolly;
partial class ComplexClass : global::Dolly.IClonable<ComplexClass>
{
    object global::System.ICloneable.Clone() => this.DeepClone();
    public virtual global::Dolly.ComplexClass DeepClone() =>
        new ()
        {
            IntArray = IntArray?.ToArray(),
            IntList = IntList == null ? null : new (IntList),
            IntIEnumerable = IntIEnumerable?.ToArray(),
            StringArray = StringArray?.ToArray(),
            StringList = StringList == null ? null : new (StringList),
            StringIEnumerable = StringIEnumerable?.ToArray(),
            ReferenceArray = ReferenceArray?.Select(item => item?.DeepClone()).ToArray(),
            ReferenceList = ReferenceList == null ? null : new (ReferenceList.Select(item => item?.DeepClone())),
            ReferenceIEnumerable = ReferenceIEnumerable?.Select(item => item?.DeepClone()).ToArray(),
            ValueArray = ValueArray?.Select(item => item?.DeepClone()).ToArray(),
            ValueList = ValueList == null ? null : new (ValueList.Select(item => item?.DeepClone())),
            ValueIEnumerable = ValueIEnumerable?.Select(item => item?.DeepClone()).ToArray()
        };

    public virtual global::Dolly.ComplexClass ShallowClone() =>
        new ()
        {
            IntArray = IntArray?.ToArray(),
            IntList = IntList == null ? null : new (IntList),
            IntIEnumerable = IntIEnumerable?.ToArray(),
            StringArray = StringArray?.ToArray(),
            StringList = StringList == null ? null : new (StringList),
            StringIEnumerable = StringIEnumerable?.ToArray(),
            ReferenceArray = ReferenceArray?.ToArray(),
            ReferenceList = ReferenceList == null ? null : new (ReferenceList),
            ReferenceIEnumerable = ReferenceIEnumerable?.ToArray(),
            ValueArray = ValueArray?.ToArray(),
            ValueList = ValueList == null ? null : new (ValueList),
            ValueIEnumerable = ValueIEnumerable?.ToArray()
        };
}
